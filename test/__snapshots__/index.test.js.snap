// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`happypack babel 1`] = `
Object {
  "module": Object {
    "rules": Array [
      Object {
        "exclude": /node_modules/,
        "test": /\\\\\\.\\(js\\|jsx\\)\\$/,
        "use": Array [
          Object {
            "loader": "happypack/loader",
            "options": Object {
              "id": "js-jsx-foo",
            },
          },
        ],
      },
    ],
  },
  "plugins": Array [
    HappyPlugin {
      "config": Object {
        "cache": true,
        "cacheContext": Object {
          "env": "test",
          "refresh": 0,
        },
        "compilerId": "default",
        "enabled": true,
        "id": "js-jsx-foo",
        "loaders": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "cacheDirectory": true,
            },
          },
        ],
        "tempDir": ".happypack",
        "threadPool": Object {
          "compile": [Function],
          "isRunning": [Function],
          "size": 3,
          "start": [Function],
          "stop": [Function],
        },
        "threads": 3,
        "verbose": true,
      },
      "id": "js-jsx-foo",
      "name": "HappyPack",
      "state": Object {
        "baseLoaderRequest": "",
        "debug": false,
        "foregroundThreadPool": null,
        "loaders": Array [],
        "started": false,
        "verbose": false,
      },
    },
  ],
  "resolve": Object {
    "extensions": Array [
      ".js",
      ".json",
    ],
  },
  "stats": Object {
    "children": false,
    "chunks": false,
    "modules": false,
    "reasons": false,
  },
}
`;

exports[`happypack cssModules 1`] = `
Object {
  "module": Object {
    "rules": Array [
      Object {
        "test": /\\\\\\.css\\$/,
        "use": Array [
          Object {
            "loader": "style-loader",
            "options": Object {},
          },
          Object {
            "loader": "happypack/loader",
            "options": Object {
              "id": "css-foo",
            },
          },
        ],
      },
    ],
  },
  "plugins": Array [
    HappyPlugin {
      "config": Object {
        "cache": true,
        "cacheContext": Object {
          "env": "test",
          "refresh": 0,
        },
        "compilerId": "default",
        "enabled": true,
        "id": "css-foo",
        "loaders": Array [
          Object {
            "loader": "css-loader",
            "options": Object {
              "importLoaders": 1,
              "localIdentName": "[name]--[local]--[hash:base64:5]",
              "modules": true,
            },
          },
        ],
        "tempDir": ".happypack",
        "threadPool": Object {
          "compile": [Function],
          "isRunning": [Function],
          "size": 3,
          "start": [Function],
          "stop": [Function],
        },
        "threads": 3,
        "verbose": true,
      },
      "id": "css-foo",
      "name": "HappyPack",
      "state": Object {
        "baseLoaderRequest": "",
        "debug": false,
        "foregroundThreadPool": null,
        "loaders": Array [],
        "started": false,
        "verbose": false,
      },
    },
  ],
  "resolve": Object {
    "extensions": Array [
      ".js",
      ".json",
    ],
  },
  "stats": Object {
    "children": false,
    "chunks": false,
    "modules": false,
    "reasons": false,
  },
}
`;

exports[`happypack extractText 1`] = `
Object {
  "module": Object {
    "loaders": Array [
      Object {
        "loaders": Array [
          "style-loader",
          "css-loader?importLoaders=1&localIdentName=[name]--[local]--[hash:base64:5]&modules",
        ],
        "test": /\\\\\\.css\\$/,
      },
    ],
    "rules": Array [
      Object {
        "exclude": undefined,
        "test": /\\\\\\.css\\$/,
        "use": Array [
          Object {
  "loader": "foo",
  "options": Object {
    "id": 1,
    "omit": 1,
    "remove": true,
  },
},
          Object {
            "loader": "style-loader",
          },
          Object {
            "loader": "happypack/loader?id=css-foo",
            "options": Object {},
          },
        ],
      },
    ],
  },
  "plugins": Array [
    HappyPlugin {
      "config": Object {
        "cache": true,
        "cacheContext": Object {
          "env": "test",
          "refresh": 0,
        },
        "compilerId": "default",
        "enabled": true,
        "id": "css-foo",
        "loaders": Array [
          "css-loader?importLoaders=1&localIdentName=[name]--[local]--[hash:base64:5]&modules",
        ],
        "tempDir": ".happypack",
        "threadPool": Object {
          "compile": [Function],
          "isRunning": [Function],
          "size": 3,
          "start": [Function],
          "stop": [Function],
        },
        "threads": 3,
        "verbose": true,
      },
      "id": "css-foo",
      "name": "HappyPack",
      "state": Object {
        "baseLoaderRequest": "",
        "debug": false,
        "foregroundThreadPool": null,
        "loaders": Array [],
        "started": false,
        "verbose": false,
      },
    },
    ExtractTextPlugin {
      "filename": "css/[name].[contenthash:8].css",
      "id": 1,
      "options": Object {},
    },
  ],
  "resolve": Object {
    "extensions": Array [
      ".js",
      ".json",
    ],
  },
  "stats": Object {
    "children": false,
    "chunks": false,
    "modules": false,
    "reasons": false,
  },
}
`;

exports[`happypack not allowed loaders 1`] = `
Object {
  "module": Object {
    "rules": Array [
      Object {
        "exclude": /node_modules/,
        "test": /\\\\\\.\\(js\\|jsx\\)\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "cacheDirectory": true,
            },
          },
        ],
      },
    ],
  },
  "plugins": Array [],
  "resolve": Object {
    "extensions": Array [
      ".js",
      ".json",
    ],
  },
  "stats": Object {
    "children": false,
    "chunks": false,
    "modules": false,
    "reasons": false,
  },
}
`;
